C51 COMPILER V9.01   HUANJING                                                              06/19/2020 12:28:52 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE HUANJING
OBJECT MODULE PLACED IN .\huanjing.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\hardware\huanjing\huanjing.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(..
                    -\hardware\setphone;..\hardware\flash;..\hardware\huanjing;..\hardware\sendmessage;..\hardware\touch_main;..\main;..\syst
                    -em\bin;..\system\delay;..\system\iic;..\system\interrupt;..\system\stc;..\tft_touch_sd\font;..\tft_touch_sd\touch;..\tft
                    -_touch_sd\tft;..\tft_touch_sd\txt;..\hardware\chuankou;..\hardware\zhuce;..\hardware\init) DEBUG OBJECTEXTEND PRINT(.\hu
                    -anjing.lst) TABS(2) OBJECT(.\huanjing.obj)

line level    source

   1          #include "tft.h"
   2          #include "bin.h"
   3          #include "txt.h"
   4          #include "touch.h"
   5          #include "delay.h"
   6          #include "huanjing.h"
   7          #include "iic.h"
   8          #include "interrupt.h"
   9          #include "STC15F2K60S2.h"
  10          
  11          #define SlaveAddress 0x46 //定义器件在IIC总线中的从地址,根据ALT  ADDRESS地址引脚不同修改 \
  12                                    //ALT  ADDRESS引脚接地时地址为0xA6，接电源时地址为0x3A
  13          #define BACK_COLOR 0xC638
  14          #define AXIS_COLOR BLACK
  15          #define PLOT_BACK_COLOR WHITE
  16          #define G_COLOR 0x0397
  17          #define T_COLOR 0xD2A3
  18          #define H_COLOR 0x7546
  19          
  20          
  21          
  22          sbit CG_WDO = P4 ^ 4; //单总线
  23          /**
  24            dongtai.c功能
  25           光照度 ；（基于IIC协议）
  26           温湿度 ； P44
  27          */
  28          
  29          unsigned char xdata BH1750_BUF[3];
  30          unsigned char humitureT[3], humitureH[3]; //温度,湿度
  31          unsigned char xdata DispBuf[6];           //光照度
  32          unsigned char T_H, T_L, R_H, R_L;         //温度,湿度 H为整数位，L为小数位
  33          unsigned int GZData;
  34          
  35          void HuanjingIOInit(void)
  36          {
  37   1          P4M0 |= (1 << 4);
  38   1          P4M1 &= ~(1 << 4);
  39   1          Init_IIC();
  40   1      }
  41          /****************************************以下为光照度功能程序*********************************************
             -**/
  42          void Single_Write_BH1750(unsigned char REG_Address)
  43          {
  44   1          I2CStart();                //起始信号
  45   1          I2CSendByte(SlaveAddress); //发送设备地址+写信号
  46   1          I2CSendByte(REG_Address);  //内部寄存器地址，请参考中文pdf22页
  47   1          I2CStop();                 //发送停止信号
  48   1      }
  49          //*********************************************************
  50          //连续读出BH1750内部数据
C51 COMPILER V9.01   HUANJING                                                              06/19/2020 12:28:52 PAGE 2   

  51          //*********************************************************
  52          void Multiple_read_BH1750(void)
  53          {
  54   1          unsigned char i;
  55   1          I2CStart();                    //起始信号
  56   1          I2CSendByte(SlaveAddress + 1); //发送设备地址+读信号
  57   1      
  58   1          for (i = 0; i < 3; i++) //连续读取6个地址数据，存储中BH1750_BUF
  59   1          {
  60   2              BH1750_BUF[i] = I2CRecvByte(); //BH1750_BUF[0]存储0x32地址中的数据
  61   2              if (i == 3)
  62   2              {
  63   3      
  64   3                  I2CSendACK(1); //最后一个数据需要回NOACK
  65   3              }
  66   2              else
  67   2              {
  68   3                  I2CSendACK(0); //回应ACK
  69   3              }
  70   2          }
  71   1      
  72   1          I2CStop(); //停止信号
  73   1          delayms(5);
  74   1      }
  75          
  76          //初始化BH1750，根据需要请参考pdf进行修改****
  77          void Init_BH1750(void)
  78          {
  79   1          Single_Write_BH1750(0x01);
  80   1      }
  81          
  82          //*********************************************************
  83          //主程序********
  84          //*********************************************************
  85          void BH1750(void)
  86          {
  87   1      
  88   1          unsigned int TempData; //变量
  89   1      
  90   1          Single_Write_BH1750(0x01); // power on
  91   1          Single_Write_BH1750(0x10); // H- resolution mode
  92   1      
  93   1          delayms(180); //延时180ms
  94   1      
  95   1          Multiple_read_BH1750(); //连续读出数据，存储在BH1750_BUF中
  96   1      
  97   1          GZData = BH1750_BUF[0];
  98   1          GZData = (GZData << 8) + BH1750_BUF[1]; //合成数据
  99   1      
 100   1          GZData = (unsigned int)(((float)GZData) / 1.2);
 101   1      
 102   1          DispBuf[0] = GZData / 10000 + 0x30;
 103   1          TempData = GZData % 10000; //取余运算
 104   1          DispBuf[1] = TempData / 1000 + 0x30;
 105   1          TempData = TempData % 1000; //取余运算
 106   1          DispBuf[2] = TempData / 100 + 0x30;
 107   1          TempData = TempData % 100; //取余运算
 108   1          DispBuf[3] = TempData / 10 + 0x30;
 109   1          TempData = TempData % 10; //取余运算
 110   1          DispBuf[4] = TempData + 0x30;
 111   1          DispBuf[5] = '\0';
 112   1      
C51 COMPILER V9.01   HUANJING                                                              06/19/2020 12:28:52 PAGE 3   

 113   1          //TFT_ShowString(7, 3, DispBuf, BLACK, CYAN);
 114   1      }
 115          
 116          /***************************************以下为温湿度功能程序**********************************************
             -**/
 117          
 118          void DHT_IO_OUT(void)
 119          {
 120   1          CG_WDO = 1;
 121   1          P4M0 |= (1 << 4);
 122   1          P4M1 &= ~(1 << 4);
 123   1      }
 124          void DHT_IO_IN(void)
 125          {
 126   1          CG_WDO = 1;
 127   1          P4M0 &= ~(1 << 4);
 128   1          P4M1 |= (1 << 4);
 129   1      }
 130          
 131          void DH11Start(void) //开始信号
 132          {
 133   1          DHT_IO_OUT();
 134   1          CG_WDO = 0;
 135   1          delayms(20); //至少拉低18ms
 136   1          DHT_IO_IN(); //切换至输入
 137   1          delay(30);   //20-40us
 138   1      }
 139          
 140          unsigned char DH11ReceiveOneByte(void) //接收一个字节,高位在前
 141          {
 142   1          unsigned char i, temp = 0;
 143   1          for (i = 0; i < 8; i++)
 144   1          {
 145   2              temp <<= 1;
 146   2              while (CG_WDO)
 147   2                  ; //等待拉低50us
 148   2              delay(40);
 149   2              while (!CG_WDO)
 150   2                  ; //等待拉高26-28us
 151   2              delay(35);
 152   2              if (CG_WDO == 1) //表示高电平持续时间超过28为数据1 否者为零
 153   2              {
 154   3                  temp |= (1 << 0);
 155   3              }
 156   2          }
 157   1          return temp;
 158   1      }
 159          
 160          void DH11GetHumiture(void) //接收数据 5组:温度整数,小数,湿度整数,小数,校验和
 161          {                          //传感器小数位为0,所以不需要
 162   1          unsigned char check, num_check;
 163   1      
 164   1          DH11Start(); //开始信号
 165   1          while (CG_WDO)
 166   1              ; //等待响应信号拉低
 167   1          delay(80);
 168   1          while (!CG_WDO)
 169   1              ; //等待响应信号拉高
 170   1          delay(80);
 171   1      
 172   1          R_H = DH11ReceiveOneByte();
 173   1          R_L = DH11ReceiveOneByte(); //传感器小数位为0
C51 COMPILER V9.01   HUANJING                                                              06/19/2020 12:28:52 PAGE 4   

 174   1          T_H = DH11ReceiveOneByte();
 175   1          T_L = DH11ReceiveOneByte(); //传感器小数位为0
 176   1          num_check = DH11ReceiveOneByte();
 177   1      
 178   1          while (CG_WDO)
 179   1              ; //等待响应信号拉低
 180   1          delay(50);
 181   1      
 182   1          DHT_IO_OUT(); //释放总线
 183   1      
 184   1          check = R_H + R_L + T_H + T_L;
 185   1          if (check == num_check)
 186   1          {
 187   2              humitureT[0] = T_H / 10 + 0x30;
 188   2              humitureT[1] = T_H % 10 + 0x30;
 189   2              humitureT[2] = '\0';
 190   2              humitureH[0] = R_H / 10 + 0x30;
 191   2              humitureH[1] = R_H % 10 + 0x30;
 192   2              humitureH[2] = '\0';
 193   2          }
 194   1      }
 195          
 196          /****************************************以下为触控屏显示程序*********************************************
             -**/
 197          
 198          void HuanjingMFrame(void)
 199          {
 200   1          TFT_ClearArea(0, 16, 240, 320 - 16, BACK_COLOR);
 201   1          //TFT_ClearONELINE(19, BLUE);
 202   1          TFT_ShowString_W25(0, 19, 2, "主界面", BLACK, WHITE);
 203   1      
 204   1          TFT_ShowString_W25(8, 1, 2, "当前环境检测:", BLACK, BACK_COLOR);
 205   1          TFT_ShowString_W25(0, 3, 2, "光照度:", BLACK, BACK_COLOR);
 206   1          TFT_ShowString_W25(13, 3, 2, "温度:", BLACK, BACK_COLOR);
 207   1          TFT_ShowString_W25(21, 3, 2, "湿度:", BLACK, BACK_COLOR);
 208   1      }
 209          void HumitureFrame(void)
 210          {
 211   1          TFT_ClearArea(20, 70, 200, 200, PLOT_BACK_COLOR);
 212   1          //*********坐标
 213   1          LCD_DrawLine(20, 70, 20, 270, AXIS_COLOR);
 214   1          LCD_DrawLine(20, 70, 15, 80, AXIS_COLOR);
 215   1          LCD_DrawLine(20, 70, 25, 80, AXIS_COLOR);
 216   1          LCD_DrawLine(20, 270, 220, 270, AXIS_COLOR);
 217   1          LCD_DrawLine(220, 270, 210, 265, AXIS_COLOR);
 218   1          LCD_DrawLine(220, 270, 210, 275, AXIS_COLOR);
 219   1          //*********刻度
 220   1          LCD_DrawLine(20, 90, 25, 90, AXIS_COLOR); //间隔20,每一个最小刻度值对应2个像素 坐标=270-温度值*2
 221   1          LCD_DrawLine(20, 110, 25, 110, AXIS_COLOR);
 222   1          LCD_DrawLine(20, 130, 25, 130, AXIS_COLOR);
 223   1          LCD_DrawLine(20, 150, 25, 150, AXIS_COLOR);
 224   1          LCD_DrawLine(20, 170, 25, 170, AXIS_COLOR);
 225   1          LCD_DrawLine(20, 190, 25, 190, AXIS_COLOR);
 226   1          LCD_DrawLine(20, 210, 25, 210, AXIS_COLOR);
 227   1          LCD_DrawLine(20, 230, 25, 230, AXIS_COLOR);
 228   1          LCD_DrawLine(20, 250, 25, 250, AXIS_COLOR);
 229   1      }
 230          
 231          void HuanjJiancTouch(void)
 232          {
 233   1          unsigned int OldX1 = 20, OldY1 = 270, NewX1, NewY1; //温度
 234   1          unsigned int OldX2 = 20, OldY2 = 270, NewX2, NewY2; //湿度
C51 COMPILER V9.01   HUANJING                                                              06/19/2020 12:28:52 PAGE 5   

 235   1          unsigned int OldX3 = 20, OldY3 = 270, NewX3, NewY3; //光照度
 236   1          unsigned char cidu = 8;                             //画线的尺度比例
 237   1          unsigned char THTemp[3] = {0};
 238   1      
 239   1          HuanjingMFrame();
 240   1          HuanjingIOInit();
 241   1          HumitureFrame();
 242   1      
 243   1          Init_BH1750();
 244   1          Time1_Init20MS(); //定时1s用于更新传感器时间
 245   1      
 246   1          TR1 = 1; //开始计数
 247   1      
 248   1          while (1)
 249   1          {
 250   2              if (!Touch_IRQ()) //有触摸发生
 251   2              {
 252   3                  if (Convert_Pos()) //得到坐标值
 253   3                  {
 254   4                      if (tp_pixlcd.x < 48 && tp_pixlcd.y > 298) //下标签栏"主界面"
 255   4                      {
 256   5                          TR1 = 0;
 257   5                          ET1 = 0;
 258   5                          CountNumber = 0;
 259   5                          TFT_ShowString_W25(0, 19, 2, "主界面", WHITE, BLUE);
 260   5                          return;
 261   5                      } //关闭定时器
 262   4                  }
 263   3              }
 264   2              //光照度传感器
 265   2              BH1750();
 266   2              TFT_ShowString(7, 3, DispBuf, G_COLOR, BACK_COLOR);
 267   2              //绘制温度曲线
 268   2      
 269   2              if (CountNumber > 50) //计时时间大于1s,取一次值    20ms* CountNumber
 270   2              {
 271   3                  CountNumber = 0;
 272   3                  DH11GetHumiture();
 273   3                  TFT_ShowString(18, 3, humitureT, T_COLOR, BACK_COLOR); //温度数据
 274   3                  TFT_ShowString(26, 3, humitureH, H_COLOR, BACK_COLOR);  //湿度数据
 275   3      
 276   3                  if (OldX1 < 100 * 2)
 277   3                  {
 278   4                      NewX1 = OldX1 + cidu;
 279   4                      NewY1 = 270 - T_H * 2;
 280   4                      LCD_DrawLine(OldX1, OldY1, NewX1, NewY1, T_COLOR);
 281   4                      OldX1 = NewX1;
 282   4                      OldY1 = NewY1;
 283   4      
 284   4                      NewX2 = OldX2 + cidu;
 285   4                      NewY2 = 270 - R_H * 2;
 286   4                      LCD_DrawLine(OldX2, OldY2, NewX2, NewY2, H_COLOR);
 287   4                      OldX2 = NewX2;
 288   4                      OldY2 = NewY2;
 289   4      
 290   4                      NewX3 = OldX3 + cidu;
 291   4                      if (GZData < 1000)
 292   4                      {
 293   5                          NewY3 = 270 - ((GZData + 5) / 10) * 2;
 294   5                      }
 295   4                      else
 296   4                      {
C51 COMPILER V9.01   HUANJING                                                              06/19/2020 12:28:52 PAGE 6   

 297   5                          NewY3 = 270 - 100 * 2;
 298   5                      }
 299   4                      LCD_DrawLine(OldX3, OldY3, NewX3, NewY3, G_COLOR);
 300   4                      OldX3 = NewX3;
 301   4                      OldY3 = NewY3;
 302   4                  }
 303   3                  else
 304   3                  {
 305   4                      OldX1 = 20;
 306   4                      OldX2 = 20;
 307   4                      OldX3 = 20;
 308   4                      HumitureFrame();
 309   4                  }
 310   3              }
 311   2          }
 312   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2057    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =     21      33
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
